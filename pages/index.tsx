import Head from "next/head";
import Box from "@mui/material/Box";
import Typography from "@mui/material/Typography";
import Grid from "@mui/material/Unstable_Grid2";

import CHARACTERS_QUERY from "./../src/Graphql/Queries/Characters.graphql";
import EPISODES_QUERY from "../src/Graphql/Queries/Episodes.graphql";
import client from "../apollo-client";
import { ApolloQueryResult } from "@apollo/client";
import MainTitle from "../src/components/home/mainTitle";
import { GetStaticProps } from "next";

import {
  characterInitialData,
  character,
} from "../src/ts/types/character.types";

import { pagination } from "../src/ts/types/info.types";

import Container from "@mui/material/Container";

import CharactersGrid from "../src/components/characters/charactersGrid";
import EpisodesGrid from "../src/components/episodes/episodesGrid";

import Button from "../src/components/buttons/yellowButton";
import Link from "next/link";
import { episodeInitialData } from "../src/ts/types/episode.types";

import LastFavorites from "../src/components/favorites/lastFavorites";

type data = {
  results: characterInitialData[] | episodeInitialData[];
  info: pagination;
};

type graphqlResponse = {
  characters?: data;
  episodes?: data;

  loading: boolean;
  network: number;
};

type homeProps = {
  characters: characterInitialData[];
  queryInfo: pagination;
  episodes: episodeInitialData[];
};

export const getStaticProps: GetStaticProps = async (context) => {
  const characters: ApolloQueryResult<graphqlResponse> = await client.query({
    query: CHARACTERS_QUERY,
    variables: { withMoreData: false },
  });

  const episodes: ApolloQueryResult<graphqlResponse> = await client.query({
    query: EPISODES_QUERY,
    variables: { withMoreData: false },
  });

  return {
    props: {
      characters: characters.data.characters?.results.slice(0, 5),
      episodes: episodes.data.episodes?.results.slice(0, 11),
    },
  };
};

export default function Home({ characters, episodes }: homeProps): JSX.Element {
  const data = [
    {
      title: "Characters",
      element: (
        <CharactersGrid characters={characters} xs={12} sm={4} md spacing={0} />
      ),
      url: "/characters",
    },

    {
      title: "Episodes",
      element: (
        <EpisodesGrid
          episodes={episodes}
          xs={12}
          sm={6}
          md={4}
          lg={3}
          spacing={0}
        />
      ),
      url: "/episodes",
    },

    {
      title: "Favorites",
      element: <LastFavorites />,
      url: "/favorites",
    },
  ];

  return (
    <div className="bg-main bg-cover">
      <Head>
        <title>Rick and Morty - Characters and Locations</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="min-h-screen max-w-screen-lg m-auto">
        <Box className="py-32">
          <MainTitle />

          <Container>
            {data.map((value, index) => (
              <Box key={index} className="pt-5 pb-20">
                <Box className="py-4">
                  <Typography
                    id="title"
                    className="font-eurostile font-bold text-2xl sm:text-3xl md:text-4xl text-left uppercase text-shadow-main text-white"
                  >
                    {value.title}
                  </Typography>
                </Box>
                <Box className="py-4">{value.element}</Box>

                <Box className="py-4">
                  <Link href={value.url}>
                    <Button label={`See more ${value.title}`} />
                  </Link>
                </Box>
              </Box>
            ))}
          </Container>
        </Box>
      </main>
    </div>
  );
}
