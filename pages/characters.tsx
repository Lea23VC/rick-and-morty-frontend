import Head from "next/head";
import Box from "@mui/material/Box";

import CHARACTERS_QUERY from "./../src/Graphql/Queries/Characters.graphql";
import client from "../apollo-client";
import { ApolloQueryResult } from "@apollo/client";

import { characterInitialData } from "../src/ts/types/character.types";
import { pagination } from "../src/ts/types/info.types";

import MainTitle from "../src/components/home/mainTitle";

import dynamic from "next/dynamic";
import { useEffect } from "react";
import { useRouter } from "next/router";

const CharacterView = dynamic(
  () => import("../src/components/characters/view/charactersView"),
  {
    suspense: true,
  }
);

type graphqlResponse = {
  characters: {
    results: characterInitialData[];
    info: pagination;
  };

  loading: boolean;
  network: number;
};

type homeProps = {
  characters: characterInitialData[];
  queryInfo: pagination;
  nameSearch?: string;
};

Characters.getInitialProps = async ({ query }: any) => {
  // console.log("ctx: ", ctx);
  console.log("query " + query.name);
  const characters: ApolloQueryResult<graphqlResponse> = await client.query({
    query: CHARACTERS_QUERY,
    variables: { name: query.name, withMoreData: false },
  });
  return {
    characters: characters.data.characters.results,
    queryInfo: characters.data.characters.info,
    nameSearch: query.name,
  };
};

export default function Characters({
  characters,
  queryInfo,
  nameSearch,
}: homeProps): JSX.Element {
  const router = useRouter();

  // useEffect(() => {
  //   console.log("a");
  //   // Always do navigations after the first render
  //   router.push("?counter=10", undefined, { shallow: true });
  // }, []);

  // useEffect(() => {
  //   // The counter changed!
  // }, [router.query.counter]);

  return (
    <div className="bg-main bg-cover">
      <Head>
        <title>{`Chracters - Rick and Morty`}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="min-h-screen max-w-screen-lg m-auto">
        <Box className="py-32">
          <MainTitle />
          <CharacterView
            characters={characters}
            info={queryInfo}
            nameSearch={nameSearch}
          />
        </Box>
      </main>
    </div>
  );
}
